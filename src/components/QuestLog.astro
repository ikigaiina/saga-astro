---
// src/components/QuestLog.astro
// Quest log component for The Soulforge Saga

import { gameStateManager } from '../game/stateManager.js';
import { questSystem } from '../game/questSystem.js';

// Get initial state
const state = gameStateManager.getState();
const activeQuests = state.player.quests.filter(q => q.status === 'active');
const completedQuests = state.player.quests.filter(q => q.status === 'completed');
---

<div id="quest-log-container" class="h-full flex flex-col">
  <h2 class="text-2xl font-bold mb-4">Buku Misi</h2>
  
  <div class="flex gap-4 flex-1 overflow-hidden">
    <!-- Quest categories -->
    <div class="w-64 flex flex-col gap-4">
      <div class="glass-card p-4 flex-1">
        <h3 class="text-xl font-bold mb-3">Kategori</h3>
        
        <div class="space-y-2">
          <button class="glass-button secondary-button w-full py-2 text-left active-tab" data-tab="active">
            Misi Aktif ({activeQuests.length})
          </button>
          <button class="glass-button secondary-button w-full py-2 text-left" data-tab="completed">
            Misi Selesai ({completedQuests.length})
          </button>
          <button class="glass-button secondary-button w-full py-2 text-left" data-tab="available">
            Misi Tersedia
          </button>
          <button class="glass-button secondary-button w-full py-2 text-left" data-tab="chains">
            Rantai Misi
          </button>
        </div>
      </div>
      
      <!-- Quest statistics -->
      <div class="glass-card p-4">
        <h3 class="text-xl font-bold mb-3">Statistik</h3>
        <div class="space-y-2 text-sm">
          <div class="flex justify-between">
            <span class="text-slate-400">Total Misi:</span>
            <span>{state.player.quests.length}</span>
          </div>
          <div class="flex justify-between">
            <span class="text-slate-400">XP Diperoleh:</span>
            <span>1250</span>
          </div>
          <div class="flex justify-between">
            <span class="text-slate-400">Essence:</span>
            <span>450</span>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Quest list and details -->
    <div class="flex-1 flex flex-col overflow-hidden">
      <div class="glass-card p-4 flex-1 overflow-hidden flex flex-col">
        <!-- Active quests tab -->
        <div id="active-quests-tab" class="quest-tab active-tab flex-1 overflow-hidden flex flex-col">
          <h3 class="text-xl font-bold mb-3">Misi Aktif</h3>
          
          {activeQuests.length > 0 ? (
            <div class="flex gap-4 flex-1 overflow-hidden">
              <!-- Quest list -->
              <div class="w-1/3 overflow-y-auto pr-2">
                <div class="space-y-3">
                  {activeQuests.map((quest) => (
                    <div class="quest-item glass-card p-3 cursor-pointer hover:bg-slate-700/50 transition-colors"
                         data-quest-id={quest.id}
                         onClick={(e) => selectQuest(quest.id)}>
                      <div class="flex justify-between items-start">
                        <h4 class="font-bold">{quest.name}</h4>
                        <span class="text-xs px-2 py-1 rounded-full bg-blue-500/20 text-blue-300">
                          {quest.type === 'exploration' ? 'Eksplorasi' :
                           quest.type === 'combat' ? 'Pertempuran' :
                           quest.type === 'gathering' ? 'Pengumpulan' :
                           quest.type === 'crafting' ? 'Kerajinan' :
                           quest.type === 'lore' ? 'Lore' :
                           quest.type === 'forger' ? 'Forger' :
                           'Umum'}
                        </span>
                      </div>
                      <p class="text-sm text-slate-400 mt-1 line-clamp-2">{quest.description}</p>
                      <div class="mt-2">
                        <div class="w-full bg-slate-700 rounded-full h-1.5">
                          <div class="bg-blue-500 h-1.5 rounded-full" 
                               style={`width: ${calculateQuestProgress(quest)}%`}></div>
                        </div>
                        <div class="text-xs text-slate-400 mt-1 text-right">
                          {calculateQuestProgress(quest)}% selesai
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
              
              <!-- Quest details -->
              <div class="flex-1 overflow-y-auto pl-2 border-l border-slate-700 pl-4">
                {selectedQuest ? (
                  <div>
                    <div class="flex justify-between items-start mb-4">
                      <div>
                        <h2 class="text-2xl font-bold">{selectedQuest.name}</h2>
                        <div class="flex items-center mt-1">
                          <span class="text-xs px-2 py-1 rounded-full bg-blue-500/20 text-blue-300 mr-2">
                            {selectedQuest.type === 'exploration' ? 'Eksplorasi' :
                             selectedQuest.type === 'combat' ? 'Pertempuran' :
                             selectedQuest.type === 'gathering' ? 'Pengumpulan' :
                             selectedQuest.type === 'crafting' ? 'Kerajinan' :
                             selectedQuest.type === 'lore' ? 'Lore' :
                             selectedQuest.type === 'forger' ? 'Forger' :
                             'Umum'}
                          </span>
                          <span class="text-xs text-slate-400">Diterima Hari {Math.floor(selectedQuest.acceptedTime / (24 * 60 * 60 * 1000)) + 1}</span>
                        </div>
                      </div>
                      <button class="glass-button secondary-button px-3 py-1 text-sm" onClick={() => abandonQuest(selectedQuest.id)}>
                        Tinggalkan Misi
                      </button>
                    </div>
                    
                    <p class="text-slate-300 mb-6">{selectedQuest.description}</p>
                    
                    <div class="mb-6">
                      <h4 class="font-bold text-lg mb-2">Objektif</h4>
                      <div class="space-y-2">
                        {selectedQuest.objectives.map((objective) => (
                          <div class={`flex items-start p-3 rounded-lg ${
                            objective.completed ? 'bg-green-500/10 border border-green-500/30' : 'bg-slate-800/50'
                          }`}>
                            <i data-lucide={objective.completed ? 'check-circle' : 'circle'} 
                               class={`w-5 h-5 mt-0.5 mr-3 ${
                                 objective.completed ? 'text-green-500' : 'text-slate-400'
                               }`}></i>
                            <div>
                              <div class={objective.completed ? 'line-through text-slate-400' : ''}>
                                {objective.description}
                              </div>
                              {objective.type === 'gather_item' && (
                                <div class="text-xs text-slate-400 mt-1">
                                  {objective.currentQuantity || 0}/{objective.requiredQuantity} selesai
                                </div>
                              )}
                              {objective.type === 'defeat_enemy' && (
                                <div class="text-xs text-slate-400 mt-1">
                                  {objective.currentQuantity || 0}/{objective.requiredQuantity} dikalahkan
                                </div>
                              )}
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>
                    
                    <div>
                      <h4 class="font-bold text-lg mb-2">Hadiah</h4>
                      <div class="grid grid-cols-2 gap-3">
                        <div class="glass-card p-3">
                          <div class="flex items-center">
                            <i data-lucide="star" class="w-5 h-5 text-yellow-500 mr-2"></i>
                            <span>{selectedQuest.rewards.experience} EXP</span>
                          </div>
                        </div>
                        <div class="glass-card p-3">
                          <div class="flex items-center">
                            <i data-lucide="sparkles" class="w-5 h-5 text-yellow-500 mr-2"></i>
                            <span>{selectedQuest.rewards.essence} Essence</span>
                          </div>
                        </div>
                        {selectedQuest.rewards.items && selectedQuest.rewards.items.map((item) => (
                          <div class="glass-card p-3">
                            <div class="flex items-center">
                              <i data-lucide="package" class="w-5 h-5 text-blue-500 mr-2"></i>
                              <span>{item.quantity}x {item.itemId}</span>
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>
                  </div>
                ) : (
                  <div class="flex items-center justify-center h-full text-slate-500">
                    <div class="text-center">
                      <i data-lucide="scroll" class="w-12 h-12 mx-auto mb-2"></i>
                      <p>Pilih misi untuk melihat detail</p>
                    </div>
                  </div>
                )}
              </div>
            </div>
          ) : (
            <div class="flex items-center justify-center h-full text-slate-500">
              <div class="text-center">
                <i data-lucide="scroll" class="w-12 h-12 mx-auto mb-2"></i>
                <p>Tidak ada misi aktif</p>
              </div>
            </div>
          )}
        </div>
        
        <!-- Other tabs would be implemented similarly -->
        <div id="completed-quests-tab" class="quest-tab hidden">
          {/* Completed quests content */}
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  // State for selected quest
  let selectedQuest = null;
  
  // Function to calculate quest progress
  function calculateQuestProgress(quest) {
    if (!quest.objectives || quest.objectives.length === 0) return 0;
    
    const completed = quest.objectives.filter(obj => obj.completed).length;
    return Math.round((completed / quest.objectives.length) * 100);
  }
  
  // Function to select a quest
  function selectQuest(questId) {
    const state = gameStateManager.getState();
    selectedQuest = state.player.quests.find(q => q.id === questId);
    
    // Update UI to show selected quest
    updateQuestDetails();
  }
  
  // Function to update quest details display
  function updateQuestDetails() {
    // In a real implementation, this would update the DOM
    // For now, we'll just log to console
    console.log('Selected quest:', selectedQuest);
  }
  
  // Function to abandon a quest
  function abandonQuest(questId) {
    if (confirm('Apakah Anda yakin ingin meninggalkan misi ini?')) {
      const result = questSystem.abandonQuest(questId);
      if (result.success) {
        console.log(result.message);
        // Refresh quest list
        refreshQuestList();
      } else {
        console.error(result.message);
      }
    }
  }
  
  // Function to refresh quest list
  function refreshQuestList() {
    const state = gameStateManager.getState();
    const activeQuests = state.player.quests.filter(q => q.status === 'active');
    
    // Update UI with new quest list
    console.log('Refreshing quest list with', activeQuests.length, 'active quests');
  }
  
  // Tab switching functionality
  document.querySelectorAll('[data-tab]').forEach(button => {
    button.addEventListener('click', () => {
      const tabId = button.dataset.tab;
      
      // Update active tab button
      document.querySelectorAll('[data-tab]').forEach(btn => {
        btn.classList.remove('active-tab');
      });
      button.classList.add('active-tab');
      
      // Show selected tab content
      document.querySelectorAll('.quest-tab').forEach(tab => {
        tab.classList.add('hidden');
      });
      const selectedTab = document.getElementById(`${tabId}-quests-tab`);
      if (selectedTab) {
        selectedTab.classList.remove('hidden');
      }
    });
  });
  
  // Listen for state changes
  gameStateManager.subscribe((state) => {
    // Refresh quest list when state changes
    refreshQuestList();
  });
</script>