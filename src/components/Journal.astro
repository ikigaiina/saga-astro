---
// src/components/Journal.astro
// Journal component for The Soulforge Saga

import { gameStateManager } from '../game/stateManager.js';

// Get initial state
const state = gameStateManager.getState();
const journalEntries = state.player.journal || [];
---

<div id="journal-container" class="h-full flex flex-col">
  <h2 class="text-2xl font-bold mb-4">Jurnal</h2>
  
  <div class="flex gap-4 flex-1 overflow-hidden">
    <!-- Journal categories -->
    <div class="w-64 flex flex-col gap-4">
      <div class="glass-card p-4 flex-1">
        <h3 class="text-xl font-bold mb-3">Kategori</h3>
        
        <div class="space-y-2">
          <button class="glass-button secondary-button w-full py-2 text-left active-tab" data-category="all">
            Semua Entri ({journalEntries.length})
          </button>
          <button class="glass-button secondary-button w-full py-2 text-left" data-category="exploration">
            Eksplorasi ({journalEntries.filter(e => e.category === 'Exploration').length})
          </button>
          <button class="glass-button secondary-button w-full py-2 text-left" data-category="quest">
            Misi ({journalEntries.filter(e => e.category === 'Quest').length})
          </button>
          <button class="glass-button secondary-button w-full py-2 text-left" data-category="world">
            Peristiwa Dunia ({journalEntries.filter(e => e.category === 'World Event').length})
          </button>
          <button class="glass-button secondary-button w-full py-2 text-left" data-category="social">
            Sosial ({journalEntries.filter(e => e.category === 'Social').length})
          </button>
          <button class="glass-button secondary-button w-full py-2 text-left" data-category="combat">
            Pertempuran ({journalEntries.filter(e => e.category === 'Combat').length})
          </button>
          <button class="glass-button secondary-button w-full py-2 text-left" data-category="lore">
            Pengetahuan ({journalEntries.filter(e => e.category === 'Lore').length})
          </button>
        </div>
      </div>
      
      <!-- Journal statistics -->
      <div class="glass-card p-4">
        <h3 class="text-xl font-bold mb-3">Statistik</h3>
        <div class="space-y-2 text-sm">
          <div class="flex justify-between">
            <span class="text-slate-400">Entri Total:</span>
            <span>{journalEntries.length}</span>
          </div>
          <div class="flex justify-between">
            <span class="text-slate-400">Hari Pertama:</span>
            <span>Hari 1</span>
          </div>
          <div class="flex justify-between">
            <span class="text-slate-400">Wilayah Dikunjungi:</span>
            <span>5</span>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Journal entries -->
    <div class="flex-1 flex flex-col overflow-hidden">
      <div class="glass-card p-4 flex-1 overflow-hidden flex flex-col">
        <div class="flex justify-between items-center mb-4">
          <h3 class="text-xl font-bold">Entri Jurnal</h3>
          <div class="flex gap-2">
            <button class="glass-button secondary-button px-3 py-1 text-sm">
              <i data-lucide="sort-desc" class="w-4 h-4 mr-1"></i>
              Terbaru
            </button>
            <button class="glass-button secondary-button px-3 py-1 text-sm">
              <i data-lucide="search" class="w-4 h-4 mr-1"></i>
              Cari
            </button>
          </div>
        </div>
        
        {journalEntries.length > 0 ? (
          <div class="flex-1 overflow-y-auto pr-2">
            <div class="space-y-4">
              {journalEntries.map((entry) => (
                <div class="journal-entry glass-card p-4 hover:bg-slate-700/30 transition-colors">
                  <div class="flex justify-between items-start">
                    <div class="flex items-start">
                      <div class="w-8 h-8 rounded-full bg-indigo-500 flex items-center justify-center mr-3 flex-shrink-0">
                        <i data-lucide={getIconForCategory(entry.category)} class="w-4 h-4"></i>
                      </div>
                      <div>
                        <h4 class="font-bold text-lg">{entry.title}</h4>
                        <div class="flex items-center text-xs text-slate-400 mt-1">
                          <span>{formatDate(entry.timestamp)}</span>
                          <span class="mx-2">â€¢</span>
                          <span class="px-2 py-0.5 rounded-full bg-slate-700">
                            {entry.category}
                          </span>
                        </div>
                      </div>
                    </div>
                    <button class="glass-button secondary-button p-1.5 text-sm" title="Tandai">
                      <i data-lucide="bookmark" class="w-4 h-4"></i>
                    </button>
                  </div>
                  
                  <p class="mt-3 text-slate-300">{entry.content}</p>
                  
                  {entry.tags && entry.tags.length > 0 && (
                    <div class="flex flex-wrap gap-2 mt-3">
                      {entry.tags.map((tag) => (
                        <span class="text-xs px-2 py-1 rounded-full bg-indigo-500/20 text-indigo-300">
                          #{tag}
                        </span>
                      ))}
                    </div>
                  )}
                </div>
              ))}
            </div>
          </div>
        ) : (
          <div class="flex items-center justify-center h-full text-slate-500">
            <div class="text-center">
              <i data-lucide="book-open" class="w-12 h-12 mx-auto mb-2"></i>
              <p>Jurnal kosong. Petualangan Anda akan dicatat di sini.</p>
            </div>
          </div>
        )}
      </div>
    </div>
  </div>
</div>

<script>
  // Function to get icon for category
  function getIconForCategory(category) {
    const iconMap = {
      'Exploration': 'map',
      'Quest': 'clipboard-list',
      'World Event': 'globe',
      'Social': 'users',
      'Combat': 'sword',
      'Lore': 'book',
      'Achievement': 'award',
      'Reflection': 'feather'
    };
    
    return iconMap[category] || 'book-open';
  }
  
  // Function to format date
  function formatDate(timestamp) {
    const date = new Date(timestamp);
    return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()} ${date.getHours()}:${String(date.getMinutes()).padStart(2, '0')}`;
  }
  
  // Category filtering functionality
  document.querySelectorAll('[data-category]').forEach(button => {
    button.addEventListener('click', () => {
      const category = button.dataset.category;
      
      // Update active category button
      document.querySelectorAll('[data-category]').forEach(btn => {
        btn.classList.remove('active-tab');
      });
      button.classList.add('active-tab');
      
      // Filter journal entries (in a real implementation)
      console.log('Filtering journal by category:', category);
    });
  });
  
  // Listen for state changes to update journal
  gameStateManager.subscribe((state) => {
    // Update journal entries when state changes
    console.log('Journal updated with', state.player.journal?.length || 0, 'entries');
  });
</script>